{"version":3,"file":"js/question-editor.647261e1.js","mappings":"yNACOA,MAAM,kB,GACTC,EAAAA,EAAAA,GAAuC,MAAnCD,MAAM,QAAO,qBAAiB,G,GAQhCC,EAAAA,EAAAA,GAAmE,UAA3DC,KAAK,SAASF,MAAM,wBAAuB,WAAO,G,SAE5CA,MAAM,c,0CAXxBG,EAAAA,EAAAA,IAYM,MAZNC,EAYM,CAXJC,GACAJ,EAAAA,EAAAA,GAQO,QARAK,SAAMC,EAAA,KAAAA,EAAA,IAAAC,EAAAA,EAAAA,KAAA,IAAAC,IAAUC,EAAAJ,UAAAI,EAAAJ,YAAAG,IAAQ,e,WAC7BR,EAAAA,EAAAA,GAKY,Y,qCAJDU,EAAAC,aAAYC,GACrBb,MAAM,eACNc,YAAY,2BACZC,KAAK,M,iBAHIJ,EAAAC,gBAKXI,GAAmE,IAE5DL,EAAAM,QAAK,WAAdd,EAAAA,EAAAA,IAAkD,IAAlDe,GAAkDC,EAAAA,EAAAA,IAAZR,EAAAM,OAAK,qB,sBAO/C,GACEG,KAAM,iBACNC,MAAO,CACLC,KAAM,CACJpB,KAAMqB,OACNC,UAAU,IAGdC,OACE,MAAO,CACLb,aAAc,KACdK,MAAO,KAEX,EACAS,QAAS,CACPC,8BACE,IAAIC,EAAW,qBACXC,EAAS,YACKC,IAAdC,KAAKT,MAAoC,KAAdS,KAAKT,OAClCM,GAAa,GAAEG,KAAKT,QACpBO,EAAS,OAEX,IACE,MAAMG,QAAiBC,EAAAA,EAAAA,GAAM,CAC3BJ,OAAQA,EACRK,IAAKN,EACLH,KAAM,CAAEU,QAASJ,KAAKnB,gBAExBmB,KAAKK,QAAQC,KAAK,CAChBjB,KAAM,WACNkB,OAAQ,CAAEhB,KAAMU,EAASP,KAAKH,OAElC,CAAE,MAAOL,GACPc,KAAKd,MAAQA,EAAMe,SAASO,UAC9B,CACF,EACAjC,WACOyB,KAAKnB,aAECmB,KAAKnB,aAAa4B,OAAS,IACpCT,KAAKd,MAAQ,qDAEbc,KAAKU,wBAJLV,KAAKd,MAAQ,mCAMjB,GAEFyB,UACEC,SAASC,MAAQ,uBACnB,EACAjB,uBAAuBkB,EAAIC,EAAMC,GAC/B,QAAuBjB,IAAnBe,EAAGP,OAAOhB,MAAyC,KAAnBuB,EAAGP,OAAOhB,KAU5C,OAAOyB,IAVkD,CACzD,MAAMnB,EAAY,qBAAoBiB,EAAGP,OAAOhB,QAChD,IACE,MAAM0B,QAAiBf,EAAAA,EAAMgB,IAAIrB,GACjC,OAAOmB,GAAMG,GAAQA,EAAGtC,aAAeoC,EAASvB,KAAKU,SACvD,CAAE,MAAOlB,GACPkC,QAAQC,IAAInC,GACZoC,MAAMpC,EAAMe,SAASO,WACvB,CACF,CAGF,G,UC5EF,MAAMe,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://mytrivia_frontend/./src/views/QuestionEditorView.vue","webpack://mytrivia_frontend/./src/views/QuestionEditorView.vue?d1cf"],"sourcesContent":["<template>\r\n  <div class=\"container my-2\">\r\n    <h1 class=\"mb-3\">Create a Question</h1>\r\n    <form @submit.prevent=\"onSubmit\">\r\n      <textarea\r\n        v-model=\"questionBody\"\r\n        class=\"form-control\"\r\n        placeholder=\"What do you want to ask?\"\r\n        rows=\"10\"\r\n      ></textarea>\r\n      <button type=\"submit\" class=\"btn btn-success mt-3\">Publish</button>\r\n    </form>\r\n    <p v-if=\"error\" class=\"muted mt-2\">{{ error }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { axios } from \"@/common/api.service.js\";\r\n\r\nexport default {\r\n  name: \"QuestionEditor\",\r\n  props: {\r\n    slug: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      questionBody: null,\r\n      error: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async performNetworkRequest() {\r\n      let endpoint = \"/api/v1/questions/\";\r\n      let method = \"POST\";\r\n      if (this.slug !== undefined && this.slug !== \"\") {\r\n        endpoint += `${this.slug}/`;\r\n        method = \"PUT\";\r\n      }\r\n      try {\r\n        const responce = await axios({\r\n          method: method,\r\n          url: endpoint,\r\n          data: { content: this.questionBody },\r\n        });\r\n        this.$router.push({\r\n          name: \"question\",\r\n          params: { slug: responce.data.slug },\r\n        });\r\n      } catch (error) {\r\n        this.error = error.responce.statusText;\r\n      }\r\n    },\r\n    onSubmit() {\r\n      if (!this.questionBody) {\r\n        this.error = \"You can't send an empty question!\";\r\n      } else if (this.questionBody.length > 240) {\r\n        this.error = \"Ensure this field has no more than 240 characters!\";\r\n      } else {\r\n        this.performNetworkRequest();\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    document.title = \"Editor - QuestionTime\";\r\n  },\r\n  async beforeRouteEnter(to, from, next) {\r\n    if (to.params.slug !== undefined && to.params.slug !== \"\") {\r\n      const endpoint = `/api/v1/questions/${to.params.slug}/`;\r\n      try {\r\n        const response = await axios.get(endpoint);\r\n        return next((vm) => (vm.questionBody = response.data.content));\r\n      } catch (error) {\r\n        console.log(error);\r\n        alert(error.responce.statusText);\r\n      }\r\n    } else {\r\n      return next();\r\n    }\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./QuestionEditorView.vue?vue&type=template&id=6187ac29\"\nimport script from \"./QuestionEditorView.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionEditorView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","$data","questionBody","$event","placeholder","rows","_hoisted_3","error","_hoisted_4","_toDisplayString","name","props","slug","String","required","data","methods","async","endpoint","method","undefined","this","responce","axios","url","content","$router","push","params","statusText","length","performNetworkRequest","created","document","title","to","from","next","response","get","vm","console","log","alert","__exports__","render"],"sourceRoot":""}